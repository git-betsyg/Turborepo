import type { Metadata, Viewport } from "next";
import localFont from "next/font/local";
import "../globals.css";
import { GoogleTagManager } from "@next/third-parties/google";
import { Locale, locales } from "@/lib/locale";
import { SpeedInsights } from "@vercel/speed-insights/next";

const geistSans = localFont({
  src: "../fonts/GeistVF.woff",
  variable: "--font-geist-sans",
});
const geistMono = localFont({
  src: "../fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
  applicationName: "PWA App",
  appleWebApp: {
    capable: true,
    statusBarStyle: "default",
    title: "PWA App",
  },
  formatDetection: {
    telephone: false,
  },
  other: {
    "msapplication-tap-highlight": "no",
  },
};

export const viewport: Viewport = {
  themeColor: "#000000",
};

export async function generateStaticParams() {
  return locales.map((item) => ({ lang: item }));
}

export default async function RootLayout({
  children,
  params,
}: Readonly<{
  children: React.ReactNode;
  params: Promise<{ lang: Locale }>;
}>) {
  const lang = (await params).lang;
  return (
    <html lang={lang}>
      {/*todo GTM-ID*/}
      <GoogleTagManager gtmId="GTM-XYZ" />
      <body className={`${geistSans.variable} ${geistMono.variable}`}>
        {children}
        <SpeedInsights />
      </body>
    </html>
  );
}
